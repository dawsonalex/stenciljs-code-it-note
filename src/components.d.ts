/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface CodeItNote {
    /**
    * The banner text for this card. Used in the card category banner.
    */
    'bannerText': string;
    /**
    * True if the element is face down, otherwise false.
    */
    'faceDown': boolean;
  }
  interface CodeItTitle {
    'iconName': string;
    'text': string;
  }
}

declare global {


  interface HTMLCodeItNoteElement extends Components.CodeItNote, HTMLStencilElement {}
  var HTMLCodeItNoteElement: {
    prototype: HTMLCodeItNoteElement;
    new (): HTMLCodeItNoteElement;
  };

  interface HTMLCodeItTitleElement extends Components.CodeItTitle, HTMLStencilElement {}
  var HTMLCodeItTitleElement: {
    prototype: HTMLCodeItTitleElement;
    new (): HTMLCodeItTitleElement;
  };
  interface HTMLElementTagNameMap {
    'code-it-note': HTMLCodeItNoteElement;
    'code-it-title': HTMLCodeItTitleElement;
  }
}

declare namespace LocalJSX {
  interface CodeItNote extends JSXBase.HTMLAttributes<HTMLCodeItNoteElement> {
    /**
    * The banner text for this card. Used in the card category banner.
    */
    'bannerText'?: string;
    /**
    * True if the element is face down, otherwise false.
    */
    'faceDown'?: boolean;
  }
  interface CodeItTitle extends JSXBase.HTMLAttributes<HTMLCodeItTitleElement> {
    'iconName'?: string;
    'text'?: string;
  }

  interface IntrinsicElements {
    'code-it-note': CodeItNote;
    'code-it-title': CodeItTitle;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


